{"version":3,"sources":["img/SpiralArrowDown.png","img/comment.svg","img/ChatBox.svg","img/socketio.png","img/react.svg","img/socketio.svg","URL.js","component/Badge.jsx","context/SocketContext.jsx","context/ConversationContext.jsx","component/Chat.jsx","component/ChatList.jsx","component/UserDetails.jsx","component/Request.jsx","component/RequestDialog.jsx","component/RequestList.jsx","component/Input.jsx","component/Msg.jsx","component/Conversation.jsx","component/ChatWindow.jsx","component/Main.jsx","component/DevInfo.jsx","routing/ProtectRoute.jsx","component/RegistrationDialog.jsx","component/Landing.jsx","App.js","serviceWorker.js","index.js","img/mongodb.png","img/nodejs.png","img/heroku.svg"],"names":["module","exports","URL","Badge","state","style","badge","display","background","marginBottom","textAlign","fontWeight","color","borderRadius","padding","fontSize","this","props","unread","Component","SocketProvider","socket","undefined","SocketContext","Provider","value","children","sio","console","log","on","emit","token","Cookies","get","data","statusCode","setState","cause","createContext","ConversationProvider","windowState","currentFriend","currentChatId","currentConversation","invokeConversation","uid","name","chatId","context","targetUid","conversation","addNewMsg","msg","ConversationContext","contextType","Chat","formatDate","ms","dateArr","Date","toString","split","thisDate","parseInt","timeStr","toLocaleString","hour","minute","hour12","srcDateArr","toLocaleDateString","thisDateArr","diffDays","Math","abs","ref","o","container","className","selected","onClick","opacity","userDetails","_id","content","trueSender","paddingRight","margin","transition","moment","ChatList","chats","shouldSelect","chat","conversationContext","renderChatList","socketContext","marginTop","CircularProgress","length","concat","sort","o1","o2","map","i","key","Consumer","height","overflowY","index","findIndex","update","type","UserDetails","logout","remove","history","push","disconnect","Request","todayArr","body","borderColor","borderStyle","borderWidth","Number","dateStr","wordBreak","width","friendRequestId","removeCallback","window","alert","marginRight","outline","border","marginLeft","textTransform","RequestDialog","open","progress","openDialog","closeDialog","sendRequest","targetUsername","receiverUsername","Dialog","onClose","aria-labelledby","disableBackdropClick","DialogTitle","id","DialogContent","DialogContentText","TextField","autoFocus","label","fullWidth","DialogActions","Fragment","Button","document","getElementById","RequestList","friendRequests","removeFR","FRId","remRequests","filter","position","paddingBottom","fontFamily","src","ArrowDownImage","transform","request","Fab","reqDialog","variant","size","bottom","right","paddingLeft","requests","Input","visibility","sendMsg","text","textInput","disabled","focus","renderSend","IconButton","aria-label","handleChange","e","handleKeyDown","shiftKey","scrollTop","scrollHeight","preventDefault","verticalAlign","onKeyDown","onChange","placeholder","maxLength","Msg","expanded","renderMsg","lim","substring","formatDateHead","String","lastMs","lastMoment","lastDateArr","lastDate","element","senderUid","reduceMargin","onExpanded","offsetTop","Conversation","scrolledUp","vars","lastScrollTop","scrollToBottom","fab","listElement","scrollToExpanded","offset","handleScroll","st","sh","oh","offsetHeight","renderItems","CommentImage","renderByContext","onScroll","badgeContent","left","receiverUid","off","ChatWindow","ChatBoxImage","overflow","ReactLogo","NodeJsLogo","MongoDBLogo","SocketIOLogo","HerokuLogo","Main","selectedTab","selectTab","signal","elems","querySelectorAll","forEach","call","elem","classList","add","currentTarget","current","chatClickCallback","onChatClick","handleIncomingChat","incomingChatCallback","ProtectedRoute","component","rest","render","to","pathname","axios","require","default","RegistrationDialog","React","useState","setOpen","handleClose","callback","username","password","post","then","response","catch","error","Landing","handleRegOpen","regOpenCallback","def","mockLogin","set","expires","path","login","Promise","resolve","reject","err","loginPromise","a","href","data-toggle","data-target","App","exact","Boolean","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.3dff670d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/SpiralArrowDown.2d65758e.png\";","module.exports = __webpack_public_path__ + \"static/media/comment.455a0a37.svg\";","module.exports = __webpack_public_path__ + \"static/media/ChatBox.4d9f87f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/socketio.9c2629c4.png\";","module.exports = __webpack_public_path__ + \"static/media/react.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/socketio.5dc4ade3.svg\";","//let URL = \"http://localhost:3001\"\n//let URL = \"http://52.66.243.216:3001\"\nlet URL = \"https://ksk-react-chat-server.herokuapp.com\"\nexport default URL","import React, { Component } from 'react';\n\nclass Badge extends Component {\n    state = {  }\n\n    style = {\n        badge: {\n            /* width: \"80%\",  */display: \"inline-block\", background: \"#5e92b9\", marginBottom: \"0\", textAlign: \"center\", fontWeight: \"bold\", color: \"white\", borderRadius: \"15px\", padding: \"0px 8px\", fontSize: \"11px\"\n        }\n    }\n\n    render() { \n        if (this.props.unread === 0){\n            return (\"\")\n        } else if (this.props.unread>99) {\n            return (\n                <p style={this.style.badge}>\n                    99+\n                </p>\n            )    \n        } else {\n            return (\n                <p style={this.style.badge}>\n                    {this.props.unread}                    \n                </p>\n            )\n        }        \n    }\n}\n \nexport default Badge;","import React, { Component, createContext } from 'react'\nimport sio from \"socket.io-client\"\nimport URL from \"../URL.js\"\nimport Cookies from \"js-cookie\"\n\nexport class SocketProvider extends Component {\n    \n    state = { socket: undefined }\n    \n    render() { \n        return (\n            <SocketContext.Provider value={{...this.state}}>\n                {this.props.children}\n            </SocketContext.Provider>\n        );\n    }\n\n    componentDidMount() {\n        let socket = sio(`${URL}`)\n        console.log(\"Connected to Socket\")\n        socket.on(\"start-establish\", () => {\n            console.log(\"Server started establishment\")\n            socket.emit(\"establish\", {token: Cookies.get(\"token\")}, (data) => {\n                if (data.statusCode === 1){\n                    console.log(\"Socket Established\")\n                    this.setState({socket: socket})\n                    /* socket.emit(\"get-all-chats\", {token: Cookies.get(\"token\")}, (data) => {\n                        console.log(\"all-chats from server: \", data)                    \n                        if (data.statusCode === 1) this.setState({chats: data.chats})                        \n                    })\n                    socket.emit(\"get-friend-requests\", {token: Cookies.get(\"token\")}, (requests) => {\n                        console.log(requests)\n                        this.setState({friendRequests: requests})\n                    }) */\n                } else if (data.cause === 2) {\n                    //logout\n                } else {\n                    //show toast/dialog\n                }\n                 \n            })\n        })        \n    }\n}\n \nexport const SocketContext = createContext();\n","import React, { Component, createContext } from 'react'\nimport sio from \"socket.io-client\"\nimport URL from \"../URL.js\"\nimport Cookies from \"js-cookie\"\nimport {SocketContext} from \"./SocketContext\"\n\nexport class ConversationProvider extends Component {\n    \n    static contextType = SocketContext\n\n    state = { \n        windowState: \"none\",\n        currentFriend: undefined,\n        currentChatId: undefined,\n        currentConversation: []\n    }\n\n    invokeConversation = (uid, name, chatId) => {\n        this.setState({\n            currentFriend: {uid: uid, name: name},            \n            windowState: \"loading\"\n        })\n        this.context.socket.emit(\"load-conversation\", {token: Cookies.get(\"token\"), targetUid: uid}, (data) => {\n            if (data.statusCode === 1){\n                this.setState({windowState: \"active\", currentConversation: data.conversation, currentChatId: chatId})\n            } else {\n                this.setState({windowState: \"error\", currentChatId: chatId})\n            }\n        })\n    }\n\n    addNewMsg = (msg) => {\n        console.log(\"Adding new msg\")\n        this.setState({currentConversation: [...this.state.currentConversation, msg]})\n    }\n    \n    render() { \n        return (\n            <ConversationContext.Provider value={{...this.state, invokeConversation: this.invokeConversation, addNewMsg: this.addNewMsg}}>\n                {this.props.children}\n            </ConversationContext.Provider>\n        );\n    }\n\n}\n \nexport const ConversationContext = createContext();\n","import React, { Component } from 'react';\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport Badge from \"./Badge\"\nimport Cookies from \"js-cookie\"\n//import {SocketContext} from \"../context/SocketContext\"\nimport {ConversationContext} from \"../context/ConversationContext\"\nimport \"../css/Chat.css\"\n\nclass Chat extends Component {\n    /* constructor(props){\n        super(props)\n        console.log(\"Chat props: \", props)\n    } */\n\n    static contextType = ConversationContext\n\n    state = { \n\n    }\n\n    /* style = {\n        notSelected: {\n            paddingBottom: \"5px\", cursor: \"pointer\", width: \"100%\", marginTop: \"5px\", paddingTop: \"8px\", background: \"#e0dfdf1f\", borderRadius: \"5px\", borderColor: \"#eaeaea\", borderStyle: \"solid\", borderWidth: \"2px\", transition: \"0.3s\"\n        },\n        isSelected: {\n            paddingBottom: \"5px\", cursor: \"pointer\", width: \"100%\", marginTop: \"10px\", marginBottom: \"10px\", paddingTop: \"8px\", transition: \"0.3s\", borderRadius: \"0\", borderColor: \"transparent\", borderStyle: \"solid\", borderWidth: \"2px\", position: \"sticky\", top: \"0\", bottom: \"0\", background: \"white\", transform: \"scale(1.0)\", paddingLeft: \"3px\", opacity: 1 \n        }\n    } */\n\n    formatDate = (ms) => {\n        let dateArr = new Date(ms).toString().split(\" \")                                \n        let thisDate = `${parseInt(dateArr[2])} ${dateArr[1]} ${dateArr[3]}`        \n        let timeStr = (new Date(ms).toLocaleString('en-US', {hour: 'numeric', minute: 'numeric', hour12: true}))          \n        let srcDateArr = new Date(ms).toLocaleDateString().split(\"/\")            \n        let thisDateArr = new Date().toLocaleDateString().split(\"/\")        \n        if (srcDateArr[2] !== thisDateArr[2] || srcDateArr[1] !== thisDateArr[1]){\n            return thisDate\n        } else {\n            //console.log(parseInt(srcDateArr[0]), \"-\", parseInt(thisDateArr[0]))\n            let diffDays = Math.abs(parseInt(srcDateArr[0]) - parseInt(thisDateArr[0]))\n            if (diffDays==0) return timeStr\n            else if (diffDays==1) return \"Yesterday\"            \n            else return thisDate\n        }      \n    }\n\n    render() {\n        //console.log(\"CHAT: \", this.props.data) \n        const {invokeConversation} = this.context\n        return (\n            <div \n                ref={(o)=>{this.container = o}} \n                className={`container ${this.props.selected === true?\"selected\":\"not-selected\"}`}\n                /* style={this.props.selected === true?this.style.isSelected:this.style.notSelected} */\n                onClick={() => { \n                    this.container.style.opacity=0.5;\n                    invokeConversation(this.props.data.userDetails._id, this.props.data.userDetails.name, this.props.data._id) \n                }}>\n                <div className=\"row\">\n                    <div className=\"col-sm-8 col-md-8 col-lg-8\">\n                        <h6 className=\"user-full-name\">\n                            {this.props.data.userDetails.name}                            \n                        </h6>\n                        {this.props.data.content === undefined?\n                            <p className=\"no-preview\">                    \n                                <span>Say Hi to your friend</span>                    \n                            </p>\n                            :\n                            <p className=\"preview\">                    \n                                <span>{this.props.data.trueSender===Cookies.get(\"uid\")?'You: ':''}</span>\n                                {this.props.data.content}\n                            </p>\n                        }\n                    </div>\n                    <div className=\"col-sm-4 col-md-4 col-lg-4\" style={{padding: \"0\", textAlign: \"end\", paddingRight: \"10px\"}}>\n                        <h6 style={{margin: \"0 0 1px 0\", fontSize: \"12px\", transition: \"0.1s\", opacity: this.props.selected === true?\"0\":\"1\", color: \"rgb(94, 146, 185)\"}}>{this.formatDate(this.props.data.moment)}</h6>\n                        <Badge unread={this.props.data.unread === undefined?0:this.props.data.unread} />\n                    </div>\n                </div>                                \n            </div>\n        );\n    }\n}\n \nexport default Chat;","import React, { Component } from 'react';\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport Chat from \"./Chat\"\nimport Cookies from \"js-cookie\"\n//import NewChatDialog from './RequestDialog';\n//import { BrowserRouter as Router, Route } from 'react-router-dom';\n//import io from \"socket.io-client\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport \"../css/ChatList.css\"\nimport {SocketContext} from \"../context/SocketContext\"\nimport {ConversationContext} from \"../context/ConversationContext\"\n\nclass ChatList extends Component {\n\n    /* constructor(props){\n        super(props)\n        console.log(\"ChatList: \", props)\n    } */\n\n    static contextType = SocketContext\n\n    state = { chats: undefined/* socket: undefined */ }\n\n    shouldSelect = (chat) => {\n        if (this.conversationContext.currentChatId === chat._id) return true\n        else return false\n    }\n\n    renderChatList = (socketContext, conversationContext) => {\n        this.conversationContext = conversationContext\n        this.socketContext = socketContext\n        if (this.state.chats === undefined || this.state.chats === null){\n            return (<div style={{ marginTop: \"50px\", textAlign: \"center\" }}> <CircularProgress /> </div>)\n        } else if (this.state.chats.length === 0) {\n            return (<div style={{ marginTop: \"50px\", textAlign: \"center\" }}> <p style={{fontSize: \"12px\", color: \"#757575\"}}>You don't have any chats.<br></br>Add friends to chat with them.</p> </div>)\n        } else {\n            return (\n                [].concat(this.state.chats)\n                .sort((o1, o2) => o1.moment > o2.moment?-1:1)\n                .map((chat, i)=>(\n                    <Chat selected={this.shouldSelect(chat)} key={i} data={chat} />\n                ))\n            )\n        }\n    } \n\n    render() { \n        //console.log(\"Rendering ChatList\")\n        //console.log(\"Chats: \", this.props.chats)\n        \n        return (\n            <SocketContext.Consumer>{(socketContext) => (\n                <ConversationContext.Consumer>{(conversationContext) => (\n                    <div className=\"customScroll\" style={{height: \"100%\", overflowY: \"scroll\", paddingRight: \"5px\"}}>\n                        {this.renderChatList(socketContext, conversationContext)}                \n                    </div>\n                )}</ConversationContext.Consumer>\n            )}</SocketContext.Consumer>\n        );\n    }\n\n    componentDidMount(){ \n        //this.setState({socket: this.props.socket}) \n        //console.log(\"From ChatList: \", this.context)\n        \n        this.socketContext.socket.emit(\"get-all-chats\", {token: Cookies.get(\"token\")}, (data) => {\n            console.log(\"all-chats from server: \", data)                    \n            if (data.statusCode === 1) this.setState({chats: data.chats})                        \n        })\n\n        this.socketContext.socket.on(\"new-chat\", (data) => {\n            console.log(\"Adding new chat to list: \", data)\n            this.setState({chats: [data, ...this.state.chats]})\n            //console.log(\"Present State: \", this.state)\n        })\n\n        this.socketContext.socket.on(\"chat-update\", (data) => {\n            console.log(\"Chat Update: \", data)\n            let index = this.state.chats.findIndex(o => o._id === data.update._id)\n            if (index === -1 ) return\n            let chat = this.state.chats[index]\n            chat.type = data.update.type\n            chat.trueSender = data.update.trueSender\n            chat.moment = data.update.moment\n            chat.content = data.update.content\n            chat.unread = data.update.unread\n            //console.log(\"Target Chat: \", chat)\n            this.setState({chats: this.state.chats})\n        })\n    } \n    \n}\n \nexport default ChatList;","import React, { Component } from 'react';\nimport Cookies from \"js-cookie\"\nimport {SocketContext} from \"../context/SocketContext\"\nimport \"../css/UserDetail.css\"\n\nclass UserDetails extends Component {\n\n    static contextType = SocketContext\n\n    state = {  }\n\n    logout = () => {           \n        Cookies.remove(\"token\")\n        Cookies.remove(\"username\")        \n        this.props.history.push(`/`)\n        this.context.socket.disconnect()\n    }\n\n    render() { \n        return (\n            <div className=\"primary\">                \n                <h4 className=\"name\">{Cookies.get(\"name\")}</h4>\n                <h5 className=\"username\"><span>Username: </span>{Cookies.get(\"username\")}</h5>\n                <p className=\"logout\" onClick={()=>{ this.logout() }}>Logout</p>\n            </div>\n        );\n    }\n}\n \nexport default UserDetails;","import React, { Component } from 'react';\n//import Button from '@material-ui/core/Button';\nimport CloseIcon from \"@material-ui/icons/Close\"\nimport CheckIcon from \"@material-ui/icons/Check\"\nimport Cookies from \"js-cookie\"\nimport AcceptButton from \"@material-ui/core/IconButton\"\nimport RejectButton from \"@material-ui/core/IconButton\"\nimport {SocketContext} from \"../context/SocketContext\"\n\nclass Request extends Component {\n\n    static contextType = SocketContext\n    \n    constructor(props){\n        super(props)\n        //console.log(this.props.data.moment)\n        let ms = this.props.data.moment\n        this.timeStr = (new Date(Number(ms)).toLocaleString('en-US', {hour: 'numeric', minute: 'numeric', hour12: true}))\n        let dateArr = new Date(parseInt(this.props.data.moment)).toString().split(\" \")        \n        this.dateStr = this.formatDate(dateArr)        \n    }\n\n    formatDate = (dateArr) => {\n        let todayArr = new Date().toString().split(\" \")\n        //console.log(dateArr, todayArr, dateArr[2] !== todayArr[2], dateArr[1] !== todayArr[1])\n        if (dateArr[2] !== todayArr[2] || dateArr[1] !== todayArr[1]){\n            return `${parseInt(dateArr[2])} ${dateArr[1]} ${dateArr[3]}`\n        } else {\n            //console.log(parseInt(dateArr[2]), \"-\", parseInt(todayArr[2]))\n            let diffDays = Math.abs(parseInt(dateArr[2]) - parseInt(todayArr[2]))\n            if (diffDays==0) return \"Today\"\n            else if (diffDays==1) return \"Yesterday\"\n            else if (diffDays<365) return `${parseInt(dateArr[2])} ${dateArr[1]}`\n            else return `${parseInt(dateArr[2])} ${dateArr[1]} ${dateArr[3]}`\n        }\n    }\n    \n    state = {}\n\n    style = {\n        body: { background: \"#fefefe\", borderRadius: \"5px\", borderColor: \"#eaeaea\", borderStyle: \"solid\", borderWidth: \"2px\", padding: \"10px 10px 5px 15px\", marginBottom: \"10px\"}\n    }\n\n    render() {                  \n        return (\n            <div style={this.style.body}>\n                <h6 style={{marginBottom: \"5px\", fontWeight: \"bold\", wordBreak: \"break-all\", fontSize: \"16px\"}}>{this.props.data.userDetails.name}</h6>\n                <p style={{fontWeight: \"normal\", margin: \"0\", width: \"100%\", textAlign: \"left\", fontSize: \"12px\", color: \"#757575\"}}>{`${this.dateStr} ${this.timeStr}`}</p>\n                <div style={{textAlign: \"right\", marginTop: \"10px\"}}>\n                    <RejectButton onClick={()=>{\n                            this.context.socket.emit(\"reject-friend-request\", {token: Cookies.get(\"token\"), friendRequestId: this.props.data._id}, (data)=>{\n                                if (data.statusCode === 1){\n                                    this.props.removeCallback(this.props.data._id)\n                                } else {\n                                    window.alert(\"Error Occurred!\");\n                                }\n                            })\n                        }} style={{marginRight: \"10px\", padding: \"0\", outline: \"none\", border: \"none\"}}> \n                        <CloseIcon color=\"secondary\" /> \n                    </RejectButton>\n                    <AcceptButton \n                            style={{padding: \"1px 2px\", borderRadius: \"20px\", background: \"#08c55b\", outline: \"none\", border: \"none\"}} \n                            onClick={()=>{\n                            this.context.socket.emit(\"accept-friend-request\", {token: Cookies.get(\"token\"), friendRequestId: this.props.data._id}, (data)=>{\n                                if (data.statusCode === 1){\n                                    this.props.removeCallback(this.props.data._id)\n                                } else {\n                                    window.alert(\"Error Occurred!\")\n                                }\n                            }) \n                        }}> \n                        <CheckIcon style={{padding: \"2px 0px\", color: \"white\", marginLeft: \"3px\"}} />\n                        <h6 style={{fontSize: \"13px\", fontWeight: \"bold\", marginBottom: \"0\", marginTop: \"1px\", marginRight: \"10px\", color: \"white\", marginLeft: \"5px\", textTransform: \"uppercase\"}}>Accept</h6>\n                    </AcceptButton>\n                </div>\n            </div>\n        )\n    }\n}\n \nexport default Request;","import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Cookies from \"js-cookie\"\nimport {SocketContext} from \"../context/SocketContext\"\n\nexport default class RequestDialog extends Component {\n  \n  static contextType = SocketContext\n\n  state = { open: false, progress: false }\n\n  openDialog = () => {\n    this.setState({open: true})\n  };\n\n  closeDialog = () => {\n    this.setState({open: false});\n  };\n\n  //props.handler(openDialog);\n\n  sendRequest = (targetUsername) => {\n    this.setState({progress: true})\n    this.context.socket.emit(\"publish-friend-request\", {token: Cookies.get(\"token\"), receiverUsername: targetUsername}, (data) => {\n      console.log(data)\n      this.setState({progress: false})\n      if (data.statusCode===1){\n        this.closeDialog()\n        window.alert(\"Request Sent\")\n      } else {\n        window.alert(data.msg)\n      }\n    })\n  }\n\n  render(){\n    return (\n      <div>\n        <Dialog open={this.state.open} onClose={() => {this.closeDialog()}} aria-labelledby=\"form-dialog-title\" disableBackdropClick>\n          <DialogTitle id=\"form-dialog-title\">Send Friend Request</DialogTitle>\n          <DialogContent>\n          <DialogContentText>\n            You'll be able to chat only when a person has accepted your friendship request.\n          </DialogContentText>\n            <TextField autoFocus margin=\"dense\" id=\"usernameText\" label=\"Recepient Username\" type=\"text\" fullWidth />                   \n          </DialogContent>\n          <DialogActions style={{marginRight: \"10px\", marginBottom: \"5px\"}}>          \n            {this.state.progress?\n            <CircularProgress/>\n            :\n            <React.Fragment>\n              <Button onClick={() => { this.closeDialog() }} color=\"primary\">Cancel</Button>\n              <Button onClick={() => { this.sendRequest(document.getElementById(\"usernameText\").value) }} color=\"primary\">Send</Button>\n            </React.Fragment>}            \n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport CircularProgress from  \"@material-ui/core/CircularProgress\"\nimport Request from './Request';\nimport FAB from \"@material-ui/core/Fab\"\nimport Fab from '@material-ui/core/Fab';\nimport \"../css/RequestList.css\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport RequestDialog from \"./RequestDialog\"\nimport Cookies from \"js-cookie\"\nimport {SocketContext} from \"../context/SocketContext\"\nimport ArrowDownImage from \"../img/SpiralArrowDown.png\"\n\nclass RequestList extends Component {\n\n    static contextType = SocketContext\n\n    state = { friendRequests: undefined }  \n    \n    removeFR = (FRId) => {\n        let remRequests = this.state.friendRequests.filter(o => o._id !== FRId)\n        console.log(remRequests)\n        this.setState({friendRequests: remRequests})\n    }\n\n    render() {         \n        return (\n            <div style={{position: \"relative\", height: \"100%\", overflowY: \"hidden\"}}>\n                <div className=\"customScroll\" style={{height: \"100%\", overflowY: \"scroll\", paddingRight: \"5px\", paddingBottom: \"80px\"}}>\n                {this.state.friendRequests === undefined?\n                <div style={{width: \"100%\", textAlign: \"center\", marginTop: \"100px\"}}>\n                    <CircularProgress />\n                </div>\n                    :\n                    this.state.friendRequests.length===0?\n                    <p style={{color: \"#6c757d\", opacity: \"1\", marginTop: \"10px\", width: \"100%\", textAlign: \"center\", fontSize: \"12px\", fontFamily: \"Montserrat\"}}>                        \n                        You have no new <b>Friend Requests</b><br/>Click here to send one\n                        <img src={ArrowDownImage} style={{marginTop: \"25px\"}} style={{height: \"40%\", width: \"70%\", opacity: \"0.1\", marginTop: \"30px\", transform: \"rotate(10DEG) translateX(10px)\"}} />\n                        </p>                        \n                        :                    \n                        this.state.friendRequests.map((request, index)=>(\n                            <Request key={request._id} data={request} removeCallback={this.removeFR}/>  \n                        ))}\n                </div>\n                <Fab onClick={() => { this.reqDialog.openDialog() }} variant=\"extended\" size=\"small\" color=\"secondary\" style={{position: \"absolute\", bottom: \"15px\", right: \"15px\", outline: \"none\", border: \"none\", fontSize: \"14px\", paddingRight: \"15px\", paddingLeft: \"15px\", textTransform: \"none\", fontFamily: \"Quicksand\", fontWeight: \"bold\"}} > <AddIcon style={{fontSize: \"20px\", marginRight: \"5px\"}} /> New Request </Fab>\n                <RequestDialog ref={(o) => { this.reqDialog = o }} />\n            </div>\n            \n        );\n    }\n\n    componentDidMount() {\n        \n        //Listen for & emit FR events only\n\n        this.context.socket.emit(\"get-friend-requests\", {token: Cookies.get(\"token\")}, (requests) => {\n            console.log(\"all-FRs: \", requests)\n            this.setState({friendRequests: requests})\n        })\n\n        this.context.socket.on(\"new-friend-request\", (data) => {\n            console.log(\"New FR: \", data)\n            this.setState({friendRequests: [data, ...this.state.friendRequests]})\n        }) \n\n    }\n}\n \nexport default RequestList;","import React, { Component } from 'react';\nimport Cookies from \"js-cookie\"\nimport SendIcon from \"@material-ui/icons/SendRounded\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport \"../css/Input.css\"\nimport {SocketContext} from \"../context/SocketContext\"\n\nclass Input extends Component {\n\n    static contextType = SocketContext\n    /* constructor(props) {\n        super(props)\n        console.log(\"Input Props: \", props)\n    } */\n\n    state = { \n        visibility: 0 //0: nothing, 1: button, 2: progress \n    }\n\n    sendMsg = () => {                        \n        let text = this.textInput.value\n        if (text.length === 0) return\n        this.textInput.disabled = true   \n        this.setState({visibility: 2})     \n        this.context.socket.emit(\"send-msg\", {token: Cookies.get(\"token\"), targetUid: this.props.targetUid, content: text, type: \"text\"}, (data) => {\n            this.setState({visibility: 0})\n            this.textInput.disabled = false\n            if (data.statusCode === 0){\n                window.alert(\"Error Occured\")\n            } else {\n                //this.props.onMsgSent(data.msg)\n                document.getElementById(\"text\").value = ''\n                document.getElementById(\"text\").focus()\n            }\n        })\n    }\n\n    renderSend = () => {\n        switch(this.state.visibility){\n            case 1:\n                return (\n                    <IconButton className=\"sendButton\" onClick={()=>{this.sendMsg()}} aria-label=\"delete\">\n                        <SendIcon/>                        \n                    </IconButton>\n                )                \n            case 2:\n                return (\n                    <CircularProgress className=\"progress\" />\n                )                \n            default:\n                return(\"\")\n\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({visibility: this.textInput.value.length>0?1:0})\n    }\n\n    handleKeyDown = (e) => {\n        if (e.key === 'Enter' && e.shiftKey) {            \n            this.textInput.value += \"\\n\"            \n            this.textInput.scrollTop = this.textInput.scrollHeight\n            e.preventDefault();\n        } else if (e.key === 'Enter') {\n            this.sendMsg();\n            e.preventDefault();\n        }\n    }\n\n    render() { \n        return (\n            <div style={{width: \"100%\", height: \"10%\", position: \"absolute\", bottom: \"0\", display: \"table\", background: \"aliceblue\"}}>\n                <div style={{height:\"2.5rem\", background: \"white\", display: \"table-cell\", verticalAlign: \"middle\", borderRadius: \"10px\", borderStyle: \"solid\", borderColor: \"#32708e96\", position: \"relative\"}}>\n                    <textarea \n                        ref={(o)=>{this.textInput = o}} \n                        onKeyDown={(e) => {this.handleKeyDown(e)}} \n                        onChange={(e) => {this.handleChange(e)}} \n                        id=\"text\" \n                        placeholder=\"Write message here ...\" \n                        maxLength={1000}>\n                    </textarea>                                        \n                    {this.renderSend()}                                        \n                </div>                                \n            </div>\n        )\n    }\n}\n \nexport default Input;","import React, { Component } from 'react';\nimport Cookies from \"js-cookie\"\nimport \"../css/Msg.css\"\n\nclass Msg extends Component {\n\n    /* constructor(props){\n        super(props)\n        console.log(\"Msg Props: \", props)\n    } */\n\n    state = { expanded: false }\n\n    renderMsg = (lim) => {        \n        if (this.state.expanded === true){\n            return (this.props.msg.content)\n        }\n        let len = this.props.msg.content.length;\n        if (len>lim)\n            return ([this.props.msg.content.substring(0, 50), \"...\", <span key=\"none\" onClick={()=>{this.setState({expanded: true})}} className=\"more\">Show More</span>])\n        else\n            return (this.props.msg.content)        \n    }\n\n    formatDateHead = (thisDate, ms) => {          \n        let srcDateArr = new Date(ms).toLocaleDateString().split(\"/\")            \n        let thisDateArr = new Date().toLocaleDateString().split(\"/\")        \n        if (srcDateArr[2] !== thisDateArr[2] || srcDateArr[1] !== thisDateArr[1]){\n            return thisDate\n        } else {\n            //console.log(parseInt(srcDateArr[0]), \"-\", parseInt(thisDateArr[0]))\n            let diffDays = Math.abs(parseInt(srcDateArr[0]) - parseInt(thisDateArr[0]))\n            if (diffDays==0) return \"Today\"\n            else if (diffDays==1) return \"Yesterday\"            \n            else return thisDate\n        }      \n    }\n\n    render() {                 \n        let ms = parseInt(String(this.props.msg.moment).substring(0, 13))\n        let dateArr = new Date(ms).toString().split(\" \")                \n        let lastMs = parseInt(String(this.props.lastMoment).substring(0, 13))\n        let lastDateArr = new Date(lastMs).toString().split(\" \")\n        let thisDate = `${parseInt(dateArr[2])} ${dateArr[1]} ${dateArr[3]}`\n        let lastDate = `${parseInt(lastDateArr[2])} ${lastDateArr[1]} ${lastDateArr[3]}`        \n        let timeStr = (new Date(ms).toLocaleString('en-US', {hour: 'numeric', minute: 'numeric', hour12: true}))\n        return (\n            <React.Fragment>\n                {thisDate !== lastDate?<div className=\"dateContainer\"><p className=\"dateText\">{this.formatDateHead(thisDate, ms)}</p></div>:\"\"}\n            \n                <div ref={(o) => {this.element = o}} className={`msg ${this.props.msg.senderUid === Cookies.get(\"uid\")?\"myMsg\":\"notMyMsg\"}`}>\n                    <div className={`msgPrimary ${this.props.reduceMargin===true?\"noMargin\":\"\"}`}>\n                        <p className=\"msgContent\">\n                            {this.renderMsg(50)}\n                        </p>\n                        <p className=\"timeText\">{timeStr}</p>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    componentDidUpdate(){\n        //console.log(\"Component Updated\")\n        if (this.state.expanded === true) this.props.onExpanded(this.element.offsetTop)\n    }\n}\n \nexport default Msg;","import React, { Component } from 'react';\nimport Msg from './Msg';\nimport \"../css/Conversation.css\"\nimport DownIcon from \"@material-ui/icons/KeyboardArrowDown\"\nimport Fab from \"@material-ui/core/Fab\"\nimport Badge from \"@material-ui/core/Badge\"\nimport {ConversationContext} from \"../context/ConversationContext\"\nimport {SocketContext} from \"../context/SocketContext\"\nimport Cookies from \"js-cookie\"\nimport CommentImage from \"../img/comment.svg\"\n\nclass Conversation extends Component {\n\n    /* constructor(props) {\n        super(props)\n        console.log(\"Conversation Props: \", props)\n    } */\n\n    /* static socketContext\n    static conversationContext */\n\n    state = { \n        scrolledUp: false,\n        unread: 0\n    }\n\n    vars = {\n        lastScrollTop: 0,\n    }\n\n    style = {\n        container: { height: \"82%\", overflowY: \"scroll\", position: \"absolute\", bottom: \"10%\", width: \"100%\", marginBottom: \"0\", paddingLeft: \"0\" }\n    }\n\n    scrollToBottom = () => {\n        //let elem = document.getElementById(\"list\")\n        if (this.fab.style.visibility === \"visible\"){\n            //this.setState({unread: this.state.unread+1})\n            return\n        }\n        this.listElement.scrollTop = this.listElement.scrollHeight\n        //this.setState({unread: 0})\n    }\n\n    scrollToExpanded = (offset) => {\n        console.log(\"Scrolling to: \", offset)\n        document.getElementById(\"list\").scrollTop = offset\n    }\n\n    handleScroll = () => {                \n        var st = this.listElement.scrollTop;\n        var sh = this.listElement.scrollHeight;\n        var oh = this.listElement.offsetHeight;\n        //console.log(\"ST: \", st, \"SH: \", sh, \"OH: \", oh, \"sh-oh: \", sh-oh)\n        if (st > this.vars.lastScrollTop){\n            //console.log(\"Scolled Down\")            \n            if (/* this.state.scrolledUp === true */ this.fab.style.visibility === \"visible\" && st>(sh-oh-100/* -oh */)) {\n                //this.setState({scrolledUp: false})\n                this.fab.style.visibility=\"hidden\"\n            }\n        } else {\n            //console.log(\"Scolled Up\")             \n            if (/* this.state.scrolledUp === false */ this.fab.style.visibility === \"hidden\" && st<(sh-oh-100/* -oh */)) {\n                //this.setState({scrolledUp: true})\n                this.fab.style.visibility=\"visible\"\n            }\n        }\n        this.vars.lastScrollTop = st <= 0 ? 0 : st        \n    }\n\n    renderItems = () => {\n        if (this.conversationContext.currentConversation.length===0){\n            return (\n                <div className=\"container-fluid placeholder\" style={{marginTop: \"25%\", textAlign: \"center\"}}>\n                    <img src={CommentImage} width=\"110px\" height=\"110px\" />\n                    <h6>Either of you haven't started talking yet.<br/>Send a message now.</h6>\n                    <p className=\"first\">Press <span>Ctrl + Enter</span> for newline</p>\n                    <p>Press <span>Enter</span> to send the message</p>\n                </div>\n            )\n        } else {\n            return (\n                this.conversationContext.currentConversation.map((msg, i) => (                        \n                    <Msg \n                    reduceMargin={\n                        i===0?false:(this.conversationContext.currentConversation[i-1].senderUid===this.conversationContext.currentConversation[i].senderUid)                        \n                    } \n                    onExpanded={this.scrollToExpanded} \n                    lastMoment={i==0?undefined:this.conversationContext.currentConversation[i-1].moment}\n                    key={msg._id} \n                    msg={msg}/>\n                ))\n            )\n        }\n    }\n\n    \n\n    /* renderFab = ( )=> {\n        if (this.state.scrolledUp){\n            return (\n                <Badge badgeContent={this.state.unread} color=\"secondary\" style={{visibility: \"hidden\", position: \"sticky\", bottom: \"3%\", left: \"82%\"}}>\n                    <Fab onClick={ ()=>{ this.setState({scrolledUp: false}); this.listElement.scrollTop = this.listElement.scrollHeight } } size=\"small\" style={{background: \"#039be5\", fontSize: \"14px\", outline: \"none\", border: \"none\", marginLeft: \"20px\"}} > <DownIcon style={{color:\"white\"}} /> </Fab>\n                </Badge>\n            )\n        } else {\n            return (\"\")\n        }\n    } */\n\n    renderByContext = (socketContext, conversationContext) => {\n        this.socketContext = socketContext\n        this.conversationContext = conversationContext\n        return (\n            <div ref={(o)=>{this.listElement = o}} onScroll={()=>{this.handleScroll()}} id=\"list\" className=\"custom-scroll\" style={this.style.container}>                \n                {this.renderItems()}\n                <Badge ref={(o)=>{this.fab=o}} badgeContent={this.state.unread} color=\"secondary\" style={{position: \"sticky\", bottom: \"5%\", left: \"86%\", visibility: \"hidden\"}}>\n                    <Fab onClick={ ()=>{ this.setState({unread: 0}); this.listElement.scrollTop = this.listElement.scrollHeight } } size=\"small\" style={{background: \"#039be5\", fontSize: \"14px\", outline: \"none\", border: \"none\", marginLeft: \"20px\"}} > <DownIcon style={{color:\"white\"}} /> </Fab>\n                </Badge>\n            </div>\n        )\n    }\n\n    render() {        \n        return (\n            <SocketContext.Consumer>{(socketContext) => (\n                <ConversationContext.Consumer>{(conversationContext) => (\n                    this.renderByContext(socketContext, conversationContext)\n                )}</ConversationContext.Consumer>\n            )}</SocketContext.Consumer>            \n        )\n    }\n\n    componentDidMount() {\n        //const {addNewMsg} = this.conversationContext        \n        this.socketContext.socket.on(\"new-msg\", (data) => {\n            console.log(\"new msg: \", data)\n            let msg = data.msg\n            if (msg.senderUid === Cookies.get(\"uid\")){\n                //I'm the Sender\n                console.log(\"I'm sender Comparing: \", this.conversationContext.currentFriend.uid, msg.receiverUid)\n                if (this.conversationContext.currentFriend.uid === msg.receiverUid){\n                    this.conversationContext.addNewMsg(msg)\n                }\n            } else {\n                //I'm the receiver\n                console.log(\"I'm receiver Comparing: \", this.conversationContext.currentFriend.uid, msg.senderUid, this.conversationContext.currentFriend.uid === msg.senderUid)            \n                if (this.conversationContext.currentFriend.uid === msg.senderUid){\n                    console.log(\"Firing...\")\n                    this.conversationContext.addNewMsg(msg)\n                }\n            }                        \n        })     \n        this.scrollToBottom()\n\n    }\n\n    componentDidUpdate() {\n        this.scrollToBottom()\n    }\n\n    componentWillUnmount(){\n        this.socketContext.socket.off(\"new-msg\")\n    }\n\n    \n}\n \nexport default Conversation;","import React, { Component } from 'react'\nimport {SocketContext} from \"../context/SocketContext\"\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Input from './Input'\nimport Conversation from \"./Conversation\"\nimport {ConversationContext} from \"../context/ConversationContext\"\nimport Cookies from \"js-cookie\"\nimport ChatBoxImage from \"../img/ChatBox.svg\"\nimport \"../css/ChatWindow.css\"\nimport MongoDBLogo from \"../img/mongodb.png\"\nimport HerokuLogo from \"../img/heroku.svg\"\nimport NodeJsLogo from \"../img/nodejs.png\"\nimport SocketIOLogo from \"../img/socketio.png\"\nimport ReactLogo from \"../img/react.svg\"\n\nclass ChatWindow extends Component {\n\n    state = { }\n\n    renderByContext = (socketContext, conversationContext) => {\n        //console.log(\"Render by Context: \", socketContext, conversationContext)\n        //this.socketContext = socketContext\n        switch(conversationContext.windowState){            \n            case \"loading\":                                \n                return (\n                    <div className=\"container-fluid\" style={{textAlign: \"center\", marginTop: \"45vh\"}}>\n                        <CircularProgress /> \n                        <p>Loading Conversation</p>               \n                    </div>\n                )\n            case \"active\":\n                return (\n                        <React.Fragment>                            \n                            <Conversation />\n                            <Input targetUid={conversationContext.currentFriend.uid}/>\n                        </React.Fragment>\n                )\n            case \"error\":\n                return ( \n                    <div className=\"container-fluid no-msg-container\">                        \n                        <p style={{opacity: \"0.6\"}}>Error while loading conversation</p>               \n                    </div>\n                )\n            default:\n                return ( \n                    <div className=\"container-fluid no-msg-container\">\n                        <img src={ChatBoxImage} height=\"128px\" width=\"128px\" />                        \n                        <p style={{opacity: \"0.6\"}}>Select a chat to start conversation</p>               \n                    </div>\n                )\n        }\n    }\n\n    render() { \n        return (\n            <SocketContext.Consumer>{(socketContext) => (\n                <ConversationContext.Consumer>{(conversationContext) => (\n                    <div>\n                        <div style={{height: \"5%\", width: \"100%\", overflow: \"hidden\"}}>\n                            <p style={{textAlign: \"center\", fontFamily: \"Montserrat\", fontSize: \"12px\", color: \"#bdbdbd\"}}>\n                                Built with Love using\n                                <img src={ReactLogo} width=\"32px\" height=\"32px\"></img>\n                                <img style={{marginLeft: \"5px\"}} src={NodeJsLogo} width=\"24px\" height=\"24px\"></img>\n                                <img style={{marginLeft: \"5px\"}} src={MongoDBLogo} width=\"24px\" height=\"24px\"></img>\n                                <img style={{marginLeft: \"5px\", marginRight: \"10px\"}} src={SocketIOLogo} width=\"22px\" height=\"22px\"></img>\n                                On\n                                <img style={{marginLeft: \"5px\"}} src={HerokuLogo} width=\"20px\" height=\"20px\"></img>\n                            </p>\n                        </div>\n                        {this.renderByContext(socketContext, conversationContext)}\n                    </div>\n                )}</ConversationContext.Consumer>\n            )}</SocketContext.Consumer>\n        )        \n    }\n\n    componentDidMount() {\n        //console.log(\"Component Did Mount: \", this.socketContext)\n                \n    }\n}\n \nexport default ChatWindow;","import URL from \"../URL.js\"\nimport React, { Component, useContext } from 'react'\nimport ChatList from './ChatList'\nimport io from \"socket.io-client\"\nimport Cookies from \"js-cookie\"\nimport UserDetails from './UserDetails'\nimport ChatIcon from \"@material-ui/icons/ChatBubbleOutline\"\nimport RequestIcon from \"@material-ui/icons/ContactsOutlined\"\nimport \"../css/Main.css\"\nimport RequestList from './RequestList'\n//import { Fab } from '@material-ui/core'\n//import AddIcon from \"@material-ui/icons/Add\"\n//import RequestDialog from \"./RequestDialog\"\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Input from './Input'\nimport Conversation from \"./Conversation\"\n//import Friend from './Friend';\nimport Badge from \"@material-ui/core/Badge\"\nimport {SocketContext} from \"../context/SocketContext\"\nimport ChatWindow from \"./ChatWindow\"\nimport DevInfo from \"./DevInfo.jsx\"\n\n\nclass Main extends Component {\n\n    static contextType = SocketContext\n\n    state = { selectedTab: \"chat\" }\n\n    selectTab = (element, signal) => {\n        if (signal === this.state.selectedTab) return        \n        let elems = document.querySelectorAll(\".tabButton\");\n        [].forEach.call(elems, (elem)=>{\n            elem.classList.remove(\"tabSelected\")\n        })\n        element.classList.add(\"tabSelected\")        \n        this.setState({selectedTab: signal})\n    }\n    \n    render() {          \n        return (\n            this.context.socket===undefined?\n            <div className=\"container-fluid progressContainer\">\n                <CircularProgress />                \n            </div>\n                :\n            <div className=\"container mainContainer\">\n                <div className=\"container-fluid primaryContainer\">                    \n                    <div className=\"row primaryRow\">\n                        {/* <div className=\"col-lg-3\">                            \n                            <DevInfo />\n                        </div> */}\n                        <div className=\"col-lg-8 chatWindowContainer\">                            \n                            <ChatWindow />\n                        </div>\n                        <div className=\"col-lg-4\" id=\"panel-window\">\n                            <div className=\"panelWindowContainer\">                                \n                                <div className=\"header\">\n                                    <UserDetails history={this.props.history} />                                    \n                                    <div className=\"tabs\">\n                                        <button className=\"tabButton tabSelected\" onClick={(e) => { this.selectTab(e.currentTarget, \"chat\") }}><span> <ChatIcon /> </span></button>\n                                        <button className=\"tabButton\" onClick={(e) => { this.selectTab(e.currentTarget, \"friend-request\") }}style={{marginLeft: \"10px\"}}><span> <Badge badgeContent={this.state.friendRequests===undefined?0:this.state.friendRequests.length} color=\"secondary\"> <RequestIcon /> </Badge> </span></button>                                                                         \n                                    </div>\n                                </div>\n                                <div className=\"listContainer\">\n                                    <div className={`listContainerPrimary ${this.state.selectedTab===\"chat\"?\"shown\":\"hidden\"}`}>\n                                        <ChatList className=\"chatlist\" current={this.state.currentFriend} chatClickCallback={this.onChatClick} history={this.props.history} socket={this.context.socket} chats={this.state.chats} handleIncomingChat={this.incomingChatCallback} />\n                                    </div>\n                                    <div className={`listContainerPrimary ${this.state.selectedTab===\"friend-request\"?\"shown\":\"hidden\"}`}>\n                                        <RequestList />\n                                    </div>\n                                </div> \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    \n}\n \nexport default Main;","import React, { Component } from 'react';\nimport MongoDBLogo from \"../img/mongodb.png\"\nimport HerokuLogo from \"../img/heroku.svg\"\nimport NodeJsLogo from \"../img/nodejs.png\"\nimport SocketIOLogo from \"../img/socketio.svg\"\n\nclass DevInfo extends Component {\n    state = {  }\n    render() { \n        return (\n            <React.Fragment>\n                <h3 style={{fontFamily: \"Oxygen\", fontWeight: \"bold\"}}>ReactChat</h3>\n                <div style={{padding: \"20px\", background: \"#ad12730a\", borderRadius: \"5px\", borderWidth: \"2px\", borderColor: \"#a2959d\", borderStyle: \"solid\", boxShadow: \"#e0e0e0 1px 1px 10px\"}}>\n                    <h5 style={{fontFamily: \"Quicksand\"}}>Built Using</h5>\n                    <p>\n                        <img src={MongoDBLogo} width=\"48px\" height=\"48px\"></img>\n                    </p>\n                </div>                \n                <img src={NodeJsLogo} width=\"64px\" height=\"64px\"></img>\n            </React.Fragment>\n        );\n    }\n}\n \nexport default DevInfo;","import React/* , { Component } */ from 'react'\nimport {Route, Redirect} from \"react-router-dom\"\nimport Cookies from \"js-cookie\"\nimport { SocketProvider } from '../context/SocketContext'\nimport { ConversationProvider } from '../context/ConversationContext'\n\nconst ProtectedRoute = ({component:Component, ...rest}) => {\n    return (\n        <Route\n            {...rest}\n            render = {(props) => {\n                return (\n                    Cookies.get(\"token\")?                        \n                        <SocketProvider> \n                            <ConversationProvider>\n                                <Component {...props} />\n                            </ConversationProvider>\n                        </SocketProvider>\n                        :\n                        <Redirect to={{\n                            pathname: \"/land\"/* ,\n                            state: {from: props.location} */\n                        }} />\n                )\n            }}\n        />\n    )\n}\n\nexport default ProtectedRoute","import URL from \"../URL.js\"\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nconst axios = require('axios').default;\n\nexport default function RegistrationDialog(props) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const signUp = (name, username, password) => {\n    axios.post(`${URL}/register`, {\n      name: name,\n      username: username,\n      password: password\n    })\n    .then(function (response) {\n      if (response.data.statusCode === 1){\n        window.alert(\"You're Signed Up\")\n        handleClose()\n      } else {\n        window.alert(\"Error Occured\")\n      }\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  props.callback(handleClickOpen);\n\n  return (\n    <div>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To subscribe to this website, please enter your email address here. We will send updates\n            occasionally.\n          </DialogContentText>\n          <TextField autoFocus margin=\"dense\" id=\"regNameText\" label=\"Full Name\" type=\"text\" fullWidth />\n          <TextField autoFocus margin=\"dense\" id=\"regUsernameText\" label=\"Username\" type=\"text\" fullWidth />\n          <TextField autoFocus margin=\"dense\" id=\"regPasswordText\" label=\"Password\" type=\"password\" fullWidth />\n        </DialogContent>\n        <DialogActions>          \n          <Button onClick={() => { signUp(document.getElementById(\"regNameText\").value, document.getElementById(\"regUsernameText\").value, document.getElementById(\"regPasswordText\").value) }} color=\"primary\">Sign Up</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import URL from \"../URL.js\"\nimport React, { Component } from 'react'\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport RegistrationDialog from \"./RegistrationDialog\"\nimport Cookies from \"js-cookie\"\nconst axios = require('axios').default;\n\n\nclass Landing extends Component {\n    state = { \n      handleRegOpen: undefined\n    }\n\n    regOpenCallback = (def) => {\n        this.handleRegOpen = def;\n    }\n    \n    mockLogin = () => {\n      Cookies.set(\"token\", \"awesome\", {expires: 86400, path: \"/\"})\n      Cookies.set(\"username\", document.getElementById(\"usernameText\").value, {expires: 86400, path: \"/\"})\n      this.props.history.push(\"/\")\n    }\n\n    login = (username, password) => {\n        return new Promise((resolve, reject) => {\n            axios.post(`${URL}/login`, {\n                username: username,\n                password: password\n            }).then(function (response) {\n                console.log(response.data)\n                if (response.data.statusCode === 1){\n                    resolve(response.data)\n                } else {\n                    reject(\"Incorrect Username or Password\")\n                }\n            }).catch(function (err) {\n                console.log(err)\n                reject(\"Error Occured\")\n            });\n        })     \n    }\n\n    loginPromise = async(username, password) => {\n        try{\n            let data = await this.login(username, password)\n            Cookies.set(\"uid\", data.uid, {expires: 86400, path: \"/\"})\n            Cookies.set(\"token\", data.token, {expires: 86400, path: \"/\"})\n            Cookies.set(\"name\", data.name, {expires: 86400, path: \"/\"})\n            Cookies.set(\"username\", data.username, {expires: 86400, path: \"/\"})            \n            this.props.history.push(\"/\")    \n        } catch(msg) {\n            window.alert(msg)\n        }\n    }\n\n    render() { \n        return (\n            <div className=\"conatiner\">\n                <div className=\"container-fluid\" style={{textAlign: \"center\", marginTop: \"20vh\"}}>\n                    <h1>Chat App</h1>\n                    <div>\n                        <div>\n                            <input id=\"usernameText\" type=\"text\" placeholder=\"Username\" />                            \n                        </div>\n                        <div style={{margin: \"10px\"}}>\n                            <input id=\"passwordText\" type=\"text\" placeholder=\"Password\"/>                            \n                        </div>                        \n                        <button className=\"btn btn-outline-success\" onClick={ () => { \n                            this.loginPromise(\n                                document.getElementById(\"usernameText\").value,\n                                document.getElementById(\"passwordText\").value\n                            )}\n                        }>Login</button>                        \n                        <p style={{marginTop: \"20px\"}}>Not a user? <a href=\"#\" onClick={this.state.handleRegOpen} data-toggle=\"modal\" data-target=\"#exampleModalCenter\">Register</a> Now</p>                        \n                    </div>\n                </div>\n                <RegistrationDialog callback={this.regOpenCallback} />\n            </div>\n        );\n    }\n\n    componentDidMount() {\n      this.setState({handleRegOpen: this.handleRegOpen});\n    }\n}\n\nexport default Landing;","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport {Route, Switch} from 'react-router-dom'\nimport Main from \"./component/Main\"\nimport ProtectedRoute from \"./routing/ProtectRoute\"\nimport Landing from './component/Landing';\nimport \"./css/Main.css\"\nimport { SocketContext } from './context/SocketContext';\n\nfunction App() {\n  return (\n      <Switch>\n        <Route exact path=\"/land\" component={Landing}/>        \n        <ProtectedRoute exact path=\"/\" component={\n          Main          \n        } />\n      </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from \"react-router-dom\"\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/mongodb.4fe5b11d.png\";","module.exports = __webpack_public_path__ + \"static/media/nodejs.c502658a.png\";","module.exports = __webpack_public_path__ + \"static/media/heroku.7df930e9.svg\";"],"sourceRoot":""}